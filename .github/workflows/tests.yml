name: Tests

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test - ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Display system info
      run: |
        python --version
        pip --version
        
    - name: Upgrade pip and core packages
      run: |
        python -m pip install --upgrade pip setuptools wheel
        
    - name: Install numpy first (required by other packages)
      run: |
        pip install "numpy>=1.17.0,<2.0"
        
    - name: Install dependencies from requirements.txt
      run: |
        pip install -r requirements.txt
      continue-on-error: false
        
    - name: Install package in development mode
      run: |
        pip install -e .
        
    - name: Verify installation
      run: |
        python -c "import empyrical; print(f'Empyrical {empyrical.__version__} installed successfully')"
        python -c "import pkg_resources; print('numpy:', pkg_resources.get_distribution('numpy').version)"
        python -c "import pkg_resources; print('pandas:', pkg_resources.get_distribution('pandas').version)"
        python -c "import pkg_resources; print('scipy:', pkg_resources.get_distribution('scipy').version)"
        
    - name: Run tests
      run: |
        python -m pytest tests/ -v --tb=short --no-header
      env:
        PYTHONWARNINGS: ignore
        
    - name: Upload test artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-failure-${{ matrix.os }}-py${{ matrix.python-version }}
        path: |
          *.log
          .pytest_cache/
        retention-days: 7

  quick-test:
    name: Quick Test - Ubuntu - Python 3.11
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install core dependencies only
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install numpy pandas scipy pytest
        
    - name: Install package
      run: |
        pip install -e .
        
    - name: Run basic tests
      run: |
        python -c "
import empyrical
import numpy as np
# Test basic functionality
returns = np.array([0.01, 0.02, -0.03, 0.04, -0.01])
print(f'Sharpe ratio: {empyrical.sharpe_ratio(returns)}')
print(f'Max drawdown: {empyrical.max_drawdown(returns)}')
print('Basic tests passed!')
"
    
  coverage:
    name: Coverage - Ubuntu - Python 3.11
    runs-on: ubuntu-latest
    needs: quick-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install numpy
        pip install -r requirements.txt
        pip install pytest-cov
        pip install -e .
        
    - name: Run tests with coverage
      run: |
        python -m pytest tests/ --cov=empyrical --cov-report=xml --cov-report=term
      continue-on-error: true
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
      continue-on-error: true

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        
    - name: Run flake8
      run: |
        # Check for syntax errors only
        flake8 empyrical --count --select=E9,F63,F7,F82 --show-source --statistics
        # Full check with lenient settings
        flake8 empyrical --count --exit-zero --max-complexity=20 --max-line-length=120 --statistics --exclude=__pycache__,build,dist
      continue-on-error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build wheel setuptools twine
        
    - name: Build package
      run: |
        python -m build
        
    - name: Check package
      run: |
        twine check dist/*
        ls -la dist/
        
    - name: Test installation
      run: |
        pip install dist/*.whl
        python -c "import empyrical; print(f'Installed version: {empyrical.__version__}')"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 30